{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Test Copilot Terminal Integration",
      "type": "shell",
      "command": "Write-Host 'Testing Copilot terminal integration...' -ForegroundColor Green; Get-Date; Write-Host 'Command completed successfully!' -ForegroundColor Cyan",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
      },
      "options": {
        "shell": {
          "executable": "powershell.exe",
          "args": [
            "-NoProfile",
            "-Command"
          ]
        }
      },
      "problemMatcher": []
    },
    {
      "label": "Check Terminal Shell Integration",
      "type": "shell",
      "command": "$PSVersionTable; Write-Host 'Shell integration status:' -ForegroundColor Yellow; if ($env:TERM_PROGRAM) { Write-Host \"TERM_PROGRAM: $env:TERM_PROGRAM\" } else { Write-Host 'TERM_PROGRAM not set' -ForegroundColor Red }",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Reload Terminal Profile",
      "type": "shell",
      "command": ". $PROFILE; Write-Host 'PowerShell profile reloaded' -ForegroundColor Green",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false
      },
      "problemMatcher": []
    },
    {
      "label": "Check Version Configuration",
      "type": "shell",
      "command": "cd frontend; Write-Host 'üéØ Current Version Configuration:' -ForegroundColor Cyan; node scripts/version-manager.js status; Write-Host ''; Write-Host 'üìã Package Files:' -ForegroundColor Yellow; Get-ChildItem -Name '*Package*.json' | ForEach-Object { Write-Host \"  $_\" }",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": []
    },
    {
      "label": "Switch to Svelte 4",
      "type": "shell",
      "command": "cd frontend; Write-Host 'üîÑ Switching to Svelte 4...' -ForegroundColor Yellow; node scripts/version-manager.js switchTo4; if ($LASTEXITCODE -eq 0) { Write-Host '‚úÖ Switched to Svelte 4 successfully!' -ForegroundColor Green } else { Write-Host '‚ùå Switch failed!' -ForegroundColor Red }",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": []
    },
    {
      "label": "Switch to Svelte 5",
      "type": "shell",
      "command": "cd frontend; Write-Host 'üîÑ Switching to Svelte 5...' -ForegroundColor Yellow; node scripts/version-manager.js switchTo5; if ($LASTEXITCODE -eq 0) { Write-Host '‚úÖ Switched to Svelte 5 successfully!' -ForegroundColor Green } else { Write-Host '‚ùå Switch failed!' -ForegroundColor Red }",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": []
    },
    {
      "label": "Dev Server (Auto-detect Version)",
      "type": "shell",
      "command": "cd frontend; Write-Host 'üöÄ Starting development server with auto-detected version...' -ForegroundColor Green; pnpm run dev",
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "dedicated"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "isBackground": true,
      "problemMatcher": {
        "owner": "vite",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        },
        "background": {
          "activeOnStart": true,
          "beginsPattern": "Local:",
          "endsPattern": "ready in"
        }
      }
    },
    {
      "label": "Build (Current Version)",
      "type": "shell",
      "command": "cd frontend; Write-Host 'üèóÔ∏è Building with current version...' -ForegroundColor Cyan; node scripts/version-manager.js status; Write-Host ''; pnpm run build",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": {
        "owner": "vite",
        "pattern": {
          "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
          "file": 1,
          "line": 2,
          "column": 3,
          "severity": 4,
          "message": 5
        }
      }
    },
    {
      "label": "Install Dependencies",
      "type": "shell",
      "command": "cd frontend; Write-Host 'üì¶ Installing dependencies for current version...' -ForegroundColor Blue; pnpm install",
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": []
    },
    {
      "label": "Validate Project Structure",
      "type": "shell",
      "command": "Write-Host 'üîç Validating project structure...' -ForegroundColor Magenta; Write-Host ''; Write-Host 'üìÅ Key directories:' -ForegroundColor Yellow; @('docs', 'frontend', 'frontend/src', 'frontend/scripts') | ForEach-Object { if (Test-Path $_) { Write-Host \"  ‚úÖ $_\" -ForegroundColor Green } else { Write-Host \"  ‚ùå $_\" -ForegroundColor Red } }; Write-Host ''; Write-Host 'üìã Configuration files:' -ForegroundColor Yellow; @('frontend/version.ini', 'frontend/package.json', 'frontend/Svelte5Package.json', 'frontend/LegacyPackage.json') | ForEach-Object { if (Test-Path $_) { Write-Host \"  ‚úÖ $_\" -ForegroundColor Green } else { Write-Host \"  ‚ùå $_\" -ForegroundColor Red } }; Write-Host ''; Write-Host 'üõ°Ô∏è Backup files:' -ForegroundColor Yellow; @('frontend/Svelte5PackageBackup.json', 'frontend/LegacyPackageBackup.json') | ForEach-Object { if (Test-Path $_) { Write-Host \"  ‚úÖ $_\" -ForegroundColor Green } else { Write-Host \"  ‚ùå $_\" -ForegroundColor Red } }",
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "options": {
        "cwd": "${workspaceFolder}"
      },
      "problemMatcher": []
    }
  ]
}