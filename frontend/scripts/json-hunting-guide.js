/**
 * üî• JSON Exception Hunting Guide
 *
 * Your app now has comprehensive JSON parsing instrumentation.
 * Follow this guide to capture and analyze the two mysterious JSON exceptions.
 */

console.log('üéØ JSON Exception Hunting - Your Action Plan:');
console.log('');

console.log('1Ô∏è‚É£ OPEN THE APP:');
console.log('   ‚Ä¢ Visit: http://localhost:5173/timeless-jewels');
console.log('   ‚Ä¢ Open DevTools (F12) immediately');
console.log('   ‚Ä¢ Go to Console tab');
console.log('   ‚Ä¢ Clear console (Ctrl+L)');
console.log('');

console.log('2Ô∏è‚É£ ENABLE EXCEPTION BREAKING:');
console.log('   ‚Ä¢ DevTools ‚Üí Sources tab');
console.log('   ‚Ä¢ Right sidebar ‚Üí Event Listener Breakpoints');
console.log('   ‚Ä¢ Expand "Exceptions" ‚Üí ‚òë "Thrown"');
console.log('   ‚Ä¢ This will pause on JSON.parse errors');
console.log('');

console.log('3Ô∏è‚É£ TRIGGER THE EXCEPTIONS:');
console.log('   ‚Ä¢ Refresh the page (F5)');
console.log('   ‚Ä¢ Wait for app to fully load');
console.log('   ‚Ä¢ Navigate to tree view (/timeless-jewels/tree)');
console.log('   ‚Ä¢ Interact with the app (search, click jewels, etc.)');
console.log('');

console.log('4Ô∏è‚É£ WHAT TO LOOK FOR IN CONSOLE:');
console.log('   üîç "JSON.parse #X called:" - Every parse attempt');
console.log('   ‚úÖ "JSON.parse #X succeeded" - Successful parses');
console.log('   üî• "JSON.parse #X FAILED:" - The exceptions we want!');
console.log('   üéØ "Likely caller:" - Shows which code triggered it');
console.log('   üåê "Fetch #X called:" - Network requests');
console.log('   üìÑ "response.json() #X" - API response parsing');
console.log('');

console.log('5Ô∏è‚É£ WHEN EXCEPTIONS OCCUR:');
console.log('   ‚Ä¢ Note the parse attempt number (#X)');
console.log('   ‚Ä¢ Look at the "Likely caller" line');
console.log('   ‚Ä¢ Check the stack trace in the failure log');
console.log('   ‚Ä¢ If DevTools paused, examine the Variables panel');
console.log('   ‚Ä¢ Copy the raw text that failed to parse');
console.log('');

console.log('6Ô∏è‚É£ ANALYSIS TOOLS (Run in Console):');
console.log('   window.showJsonStats()          - Summary of all attempts');
console.log('   window.jsonParseFailures        - Array of all failures');
console.log('   window.jsonParseAttempts        - Array of all attempts');
console.log('   window.unhandledJsonErrors      - Async JSON errors');
console.log('   window.debugJsonParse("text")   - Test specific JSON');
console.log('');

console.log('7Ô∏è‚É£ SPECIFIC SCENARIOS TO TEST:');
console.log('   ‚Ä¢ Page refresh (initial load)');
console.log('   ‚Ä¢ Navigate to /tree page');
console.log('   ‚Ä¢ Select different jewels');
console.log('   ‚Ä¢ Use search functionality');
console.log('   ‚Ä¢ Hard refresh (Ctrl+Shift+R)');
console.log('   ‚Ä¢ Open in incognito mode');
console.log('');

console.log('8Ô∏è‚É£ EXPECTED OUTCOMES:');
console.log('   Scenario A: WASM timing issue');
console.log('   ‚Üí You\'ll see parse failures before WASM data is ready');
console.log('   ‚Üí Stack trace points to wasiDataService.ts or tree/+page.svelte');
console.log('');
console.log('   Scenario B: Malformed stored data');
console.log('   ‚Üí Parse failures from sessionStorage/localStorage');
console.log('   ‚Üí Stack trace points to +layout.ts or utilities');
console.log('');
console.log('   Scenario C: Network/API issue');
console.log('   ‚Üí response.json() failures');
console.log('   ‚Üí HTML error pages being parsed as JSON');
console.log('');

console.log('9Ô∏è‚É£ WHAT TO REPORT BACK:');
console.log('   ‚Ä¢ The exact "üî• JSON.parse #X FAILED:" messages');
console.log('   ‚Ä¢ The "üéØ Likely caller:" information');
console.log('   ‚Ä¢ The raw text that failed (first 200 chars shown)');
console.log('   ‚Ä¢ When the exceptions occurred (page load, navigation, etc.)');
console.log('   ‚Ä¢ Results of window.showJsonStats()');
console.log('');

console.log('üöÄ READY TO HUNT! The enhanced instrumentation is now active.');
console.log('   Every JSON.parse call will be logged with detailed context.');
console.log('   The two mysterious exceptions can\'t hide anymore! üïµÔ∏è‚Äç‚ôÇÔ∏è');

export {};
