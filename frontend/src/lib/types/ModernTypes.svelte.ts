/**
 * Modern Types - Svelte 5 Reactive State Management
 * 
 * Based on type definitions generated by tools.go from the original codebase
 * Modernized for Svelte 5 by James Armstrong (github.com/BlazesRus)
 * with GitHub Copilot assistance
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 * 
 * Provides reactive access to WASM calculator and data using Svelte 5 runes
 */

import { 
  wasmLoadingState, 
  loadModernWasm, 
  getWasmState, 
  getCalculator, 
  getWasmData, 
  isWasmReady 
} from '$lib/wasm/modern-wasm-loader.svelte';

// Re-export the WASM state for components to use
export { wasmLoadingState, loadModernWasm, getWasmState, isWasmReady };

// Export reactive getters that automatically update when WASM state changes
export function useCalculator() {
  return getCalculator();
}

export function useData() {
  return getWasmData();
}

// Export individual reactive properties as functions (Svelte 5 requirement)
export function calculator() {
  return wasmLoadingState.calculator;
}

export function data() {
  return wasmLoadingState.data;
}

export function isLoading() {
  return wasmLoadingState.isLoading;
}

export function isReady() {
  return wasmLoadingState.isReady;
}

export function error() {
  return wasmLoadingState.error;
}

export function status() {
  return wasmLoadingState.status;
}

export function progress() {
  return wasmLoadingState.progress;
}

// Auto-initialize WASM when this module is imported
loadModernWasm().catch(error => {
  console.error('Failed to initialize WASM in ModernTypes:', error);
});

// Export types for TypeScript
export interface ModernCalculator {
  Calculate: Function;
  ReverseSearch: Function | null;
}

export interface ModernData {
  [key: string]: any;
}

// Legacy compatibility functions (for components that haven't been updated yet)
export function initializeCrystalline() {
  // This is now handled automatically by the modern WASM loader
  console.log('initializeCrystalline called - modern WASM loader handles initialization automatically');
}
