#!/usr/bin/env powershell

# pnpm v10 Migration Script for Windows PowerShell
# This script helps migrate the workspace to pnpm v10

Write-Host "üîÑ Starting pnpm v10 migration..." -ForegroundColor Cyan

# Check if pnpm is installed
try {
    $pnpmVersion = pnpm --version
    Write-Host "‚úÖ Current pnpm version: $pnpmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå pnpm is not installed. Please install pnpm first:" -ForegroundColor Red
    Write-Host "   npm install -g pnpm@10" -ForegroundColor Yellow
    exit 1
}

# Check if we're running pnpm v10+
$majorVersion = [int]($pnpmVersion.Split('.')[0])
if ($majorVersion -lt 10) {
    Write-Host "‚ö†Ô∏è  pnpm v$pnpmVersion detected. Upgrading to v10..." -ForegroundColor Yellow
    try {
        pnpm self-update
        Write-Host "‚úÖ pnpm updated successfully" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Failed to update pnpm. Please update manually:" -ForegroundColor Red
        Write-Host "   pnpm self-update" -ForegroundColor Yellow
        Write-Host "   OR: npm install -g pnpm@10" -ForegroundColor Yellow
        exit 1
    }
}

Write-Host "üßπ Cleaning old dependencies..." -ForegroundColor Yellow

# Clean frontend directory
Set-Location frontend
if (Test-Path "pnpm-lock.yaml") {
    Remove-Item "pnpm-lock.yaml" -Force
    Write-Host "‚úÖ Removed old pnpm-lock.yaml" -ForegroundColor Green
}

if (Test-Path "node_modules") {
    Remove-Item "node_modules" -Recurse -Force
    Write-Host "‚úÖ Removed node_modules" -ForegroundColor Green
}

Write-Host "üì¶ Installing dependencies with pnpm v10..." -ForegroundColor Cyan
try {
    pnpm install
    Write-Host "‚úÖ Dependencies installed successfully" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Failed to install dependencies" -ForegroundColor Red
    Write-Host "Please check the error messages above and resolve any issues." -ForegroundColor Yellow
    exit 1
}

Write-Host "üß™ Running verification tests..." -ForegroundColor Cyan

# Test basic commands
Write-Host "Testing basic commands..." -ForegroundColor Yellow

try {
    pnpm run format
    Write-Host "‚úÖ Format command successful" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Format command failed - check configuration" -ForegroundColor Yellow
}

try {
    pnpm run lint
    Write-Host "‚úÖ Lint command successful" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Lint command failed - check configuration" -ForegroundColor Yellow
}

try {
    pnpm run check
    Write-Host "‚úÖ Check command successful" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è  Check command failed - check configuration" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üéâ pnpm v10 migration completed!" -ForegroundColor Green
Write-Host ""
Write-Host "üìã Summary of changes:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Updated package.json to use pnpm v10" -ForegroundColor White
Write-Host "   ‚Ä¢ Added lifecycle script security configuration" -ForegroundColor White
Write-Host "   ‚Ä¢ Created .pnpmrc files with v10 optimizations" -ForegroundColor White
Write-Host "   ‚Ä¢ Regenerated lockfile with new format" -ForegroundColor White
Write-Host ""
Write-Host "üìö For detailed information, see:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ PNPM_V10_MIGRATION.md - Complete migration guide" -ForegroundColor White
Write-Host "   ‚Ä¢ .pnpmrc - Configuration files" -ForegroundColor White
Write-Host ""
Write-Host "üöÄ You can now use pnpm v10 features!" -ForegroundColor Green
Write-Host "   Remember: Test arguments no longer need '--' prefix" -ForegroundColor Yellow

Set-Location ..
